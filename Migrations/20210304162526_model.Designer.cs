// <auto-generated />
using System;
using MCT_BACKEND4.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace RegistrationAPI.Migrations
{
    [DbContext(typeof(RegistrationContext))]
    [Migration("20210304162526_model")]
    partial class model
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("RegistrationAPI.Models.VaccinType", b =>
                {
                    b.Property<Guid>("VaccinTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VaccinTypeId");

                    b.ToTable("VaccinType");

                    b.HasData(
                        new
                        {
                            VaccinTypeId = new Guid("15469f07-e61f-42e5-8bc3-fb9a84531f4a"),
                            Name = "BioNTech, Pfizer"
                        },
                        new
                        {
                            VaccinTypeId = new Guid("6ee76ca4-dc0c-411d-b351-9a7a8c087562"),
                            Name = "Spoetnik"
                        });
                });

            modelBuilder.Entity("RegistrationAPI.Models.VaccinationLocation", b =>
                {
                    b.Property<Guid>("VaccinationLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VaccinationLocationId");

                    b.ToTable("VaccinationLocations");

                    b.HasData(
                        new
                        {
                            VaccinationLocationId = new Guid("30eb8f30-24f6-4048-bd42-d067ac8b466e"),
                            Name = "Kortrijk Expo"
                        },
                        new
                        {
                            VaccinationLocationId = new Guid("ae77c2c3-7c69-4dd1-a5d4-00e34fe0f7ac"),
                            Name = "Vaccinarium Brugge"
                        },
                        new
                        {
                            VaccinationLocationId = new Guid("444b1a8e-e307-4d28-b578-8bc28432053c"),
                            Name = "De Penta"
                        });
                });

            modelBuilder.Entity("RegistrationAPI.Models.VaccinationRegistration", b =>
                {
                    b.Property<Guid>("VaccinationRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VaccinTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VaccinationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VaccinationLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VaccinationRegistrationId");

                    b.HasIndex("VaccinTypeId");

                    b.ToTable("VaccinationRegistrations");
                });

            modelBuilder.Entity("RegistrationAPI.Models.VaccinationRegistration", b =>
                {
                    b.HasOne("RegistrationAPI.Models.VaccinType", "VaccinType")
                        .WithMany()
                        .HasForeignKey("VaccinTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VaccinType");
                });
#pragma warning restore 612, 618
        }
    }
}
